/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.greeter;

import dao.PassenagerDao;
import dao.TicketDao;
import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Passenger;
import org.apache.commons.lang3.ObjectUtils;
import org.apache.commons.lang3.StringUtils;
import static ui.component.ComponetCommonMethod.setTableCenter;
import utils.Constant;

/**
 *
 * @author limingxia
 */
public class GreeterContentPanel extends javax.swing.JPanel {

    private List<Passenger> vips = new ArrayList<>();
    private Passenger selectedPassenger;

    /**
     * Creates new form AirlineManagement
     */
    public GreeterContentPanel() {
        initComponents();
        setTableCenter(vipTable);

        refreshPanel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        searchAreaBg = new ui.component.RoundPanel();
        searchBtn = new javax.swing.JButton();
        keywordTxt = new javax.swing.JTextField();
        roundPanel1 = new ui.component.RoundPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        vipTable = new javax.swing.JTable();
        refreshBtn = new ui.component.RoundPanel();
        refreshLbl = new javax.swing.JLabel();
        refreshBtn1 = new ui.component.RoundPanel();
        submitLbl = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(0, 204, 204));
        jPanel1.setOpaque(false);

        searchAreaBg.setBackground(new java.awt.Color(255, 255, 255));

        searchBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/search.png"))); // NOI18N
        searchBtn.setBorder(null);
        searchBtn.setBorderPainted(false);
        searchBtn.setOpaque(true);
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        keywordTxt.setToolTipText("");

        javax.swing.GroupLayout searchAreaBgLayout = new javax.swing.GroupLayout(searchAreaBg);
        searchAreaBg.setLayout(searchAreaBgLayout);
        searchAreaBgLayout.setHorizontalGroup(
            searchAreaBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchAreaBgLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(keywordTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(searchBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        searchAreaBgLayout.setVerticalGroup(
            searchAreaBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchAreaBgLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(searchAreaBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(searchBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(keywordTxt))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        roundPanel1.setBackground(new java.awt.Color(255, 255, 255));

        vipTable.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        vipTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Name", "Gender", "Age", "Flight No", "Issued Gift"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        vipTable.setShowGrid(false);
        vipTable.getTableHeader().setReorderingAllowed(false);
        vipTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                vipTableMouseClicked(evt);
            }
        });
        vipTable.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                vipTablePropertyChange(evt);
            }
        });
        jScrollPane1.setViewportView(vipTable);

        javax.swing.GroupLayout roundPanel1Layout = new javax.swing.GroupLayout(roundPanel1);
        roundPanel1.setLayout(roundPanel1Layout);
        roundPanel1Layout.setHorizontalGroup(
            roundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 565, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        roundPanel1Layout.setVerticalGroup(
            roundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        refreshBtn.setBackground(new java.awt.Color(255, 255, 255));

        refreshLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        refreshLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/refresh.png"))); // NOI18N
        refreshLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                refreshLblMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout refreshBtnLayout = new javax.swing.GroupLayout(refreshBtn);
        refreshBtn.setLayout(refreshBtnLayout);
        refreshBtnLayout.setHorizontalGroup(
            refreshBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(refreshLbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
        );
        refreshBtnLayout.setVerticalGroup(
            refreshBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, refreshBtnLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(refreshLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        refreshBtn1.setBackground(new java.awt.Color(255, 255, 255));

        submitLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        submitLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/edit.png"))); // NOI18N
        submitLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                submitLblMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout refreshBtn1Layout = new javax.swing.GroupLayout(refreshBtn1);
        refreshBtn1.setLayout(refreshBtn1Layout);
        refreshBtn1Layout.setHorizontalGroup(
            refreshBtn1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(submitLbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
        );
        refreshBtn1Layout.setVerticalGroup(
            refreshBtn1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, refreshBtn1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(submitLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(55, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(roundPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(searchAreaBg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(refreshBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(refreshBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(searchAreaBg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(refreshBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(refreshBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(roundPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 715, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 578, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        String keyword = keywordTxt.getText();
        if (StringUtils.isBlank(keyword)) {
            JOptionPane.showMessageDialog(this, "Please input keyword!");
            refreshPanel();
            return;
        }

        // support to search by id & name
        List<Passenger> searchResult = vips.stream().filter(a
                -> a.getPersonName().equalsIgnoreCase(keyword)
                || a.getGender().equalsIgnoreCase(keyword)
                || a.getTicket().getFlightNo().equalsIgnoreCase(keyword)
        ).collect(Collectors.toList());

        populateTable(searchResult);
    }//GEN-LAST:event_searchBtnActionPerformed

    private void vipTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vipTableMouseClicked

    }//GEN-LAST:event_vipTableMouseClicked

    private void refreshLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshLblMouseClicked
        refreshPanel();
    }//GEN-LAST:event_refreshLblMouseClicked

    private void submitLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_submitLblMouseClicked
        int selectedRowIndex = vipTable.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, Constant.SELECT_ERROR);
            return;
        }

        DefaultTableModel model = (DefaultTableModel) vipTable.getModel();
        selectedPassenger = (Passenger) model.getValueAt(selectedRowIndex, 0);

        boolean issued = false;
        if (ObjectUtils.isNotEmpty(model.getValueAt(selectedRowIndex, 4))) {
            issued = (Boolean) model.getValueAt(selectedRowIndex, 4);
        }

        if (!TicketDao.updateGiftFlag(selectedPassenger.getTicket().getTicketID(), issued)) {
            JOptionPane.showMessageDialog(this, Constant.DATABASE_ERROR);
            return;
        }

        JOptionPane.showMessageDialog(this, Constant.SUCC);
        refreshPanel();
    }//GEN-LAST:event_submitLblMouseClicked

    private void vipTablePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_vipTablePropertyChange

    }//GEN-LAST:event_vipTablePropertyChange

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField keywordTxt;
    private ui.component.RoundPanel refreshBtn;
    private ui.component.RoundPanel refreshBtn1;
    private javax.swing.JLabel refreshLbl;
    private ui.component.RoundPanel roundPanel1;
    private ui.component.RoundPanel searchAreaBg;
    private javax.swing.JButton searchBtn;
    private javax.swing.JLabel submitLbl;
    private javax.swing.JTable vipTable;
    // End of variables declaration//GEN-END:variables

    private void initVips() {
        vips = PassenagerDao.queryVipList();
    }

    private void populateTable(List<Passenger> passengers) {
        DefaultTableModel model = (DefaultTableModel) vipTable.getModel();
        model.setRowCount(0);

        if (ObjectUtils.isEmpty(passengers)) {
            return;
        }

        for (Passenger p : passengers) {

            Object[] row = new Object[5];
            row[0] = p;
            row[1] = p.getGender();
            row[2] = p.getAge();
            row[3] = p.getTicket().getFlightNo();
            row[4] = p.getTicket().getIssuedGift();

            model.addRow(row);
        }
    }

    private void refreshPanel() {
        keywordTxt.setText("");
        initVips();
        populateTable(vips);
    }
}
